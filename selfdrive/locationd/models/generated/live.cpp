#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3982672328206977086) {
   out_3982672328206977086[0] = 0;
   out_3982672328206977086[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3982672328206977086[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3982672328206977086[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3982672328206977086[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3982672328206977086[5] = -sin(in_vec[1]);
   out_3982672328206977086[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3982672328206977086[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3982672328206977086[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3982672328206977086[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3982672328206977086[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3982672328206977086[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3982672328206977086[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3982672328206977086[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3982672328206977086[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3982672328206977086[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3982672328206977086[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3982672328206977086[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7065534367796289506) {
   out_7065534367796289506[0] = delta_x[0] + nom_x[0];
   out_7065534367796289506[1] = delta_x[1] + nom_x[1];
   out_7065534367796289506[2] = delta_x[2] + nom_x[2];
   out_7065534367796289506[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7065534367796289506[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7065534367796289506[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7065534367796289506[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7065534367796289506[7] = delta_x[6] + nom_x[7];
   out_7065534367796289506[8] = delta_x[7] + nom_x[8];
   out_7065534367796289506[9] = delta_x[8] + nom_x[9];
   out_7065534367796289506[10] = delta_x[9] + nom_x[10];
   out_7065534367796289506[11] = delta_x[10] + nom_x[11];
   out_7065534367796289506[12] = delta_x[11] + nom_x[12];
   out_7065534367796289506[13] = delta_x[12] + nom_x[13];
   out_7065534367796289506[14] = delta_x[13] + nom_x[14];
   out_7065534367796289506[15] = delta_x[14] + nom_x[15];
   out_7065534367796289506[16] = delta_x[15] + nom_x[16];
   out_7065534367796289506[17] = delta_x[16] + nom_x[17];
   out_7065534367796289506[18] = delta_x[17] + nom_x[18];
   out_7065534367796289506[19] = delta_x[18] + nom_x[19];
   out_7065534367796289506[20] = delta_x[19] + nom_x[20];
   out_7065534367796289506[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_479709996386351187) {
   out_479709996386351187[0] = -nom_x[0] + true_x[0];
   out_479709996386351187[1] = -nom_x[1] + true_x[1];
   out_479709996386351187[2] = -nom_x[2] + true_x[2];
   out_479709996386351187[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_479709996386351187[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_479709996386351187[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_479709996386351187[6] = -nom_x[7] + true_x[7];
   out_479709996386351187[7] = -nom_x[8] + true_x[8];
   out_479709996386351187[8] = -nom_x[9] + true_x[9];
   out_479709996386351187[9] = -nom_x[10] + true_x[10];
   out_479709996386351187[10] = -nom_x[11] + true_x[11];
   out_479709996386351187[11] = -nom_x[12] + true_x[12];
   out_479709996386351187[12] = -nom_x[13] + true_x[13];
   out_479709996386351187[13] = -nom_x[14] + true_x[14];
   out_479709996386351187[14] = -nom_x[15] + true_x[15];
   out_479709996386351187[15] = -nom_x[16] + true_x[16];
   out_479709996386351187[16] = -nom_x[17] + true_x[17];
   out_479709996386351187[17] = -nom_x[18] + true_x[18];
   out_479709996386351187[18] = -nom_x[19] + true_x[19];
   out_479709996386351187[19] = -nom_x[20] + true_x[20];
   out_479709996386351187[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4572680402772579634) {
   out_4572680402772579634[0] = 1.0;
   out_4572680402772579634[1] = 0.0;
   out_4572680402772579634[2] = 0.0;
   out_4572680402772579634[3] = 0.0;
   out_4572680402772579634[4] = 0.0;
   out_4572680402772579634[5] = 0.0;
   out_4572680402772579634[6] = 0.0;
   out_4572680402772579634[7] = 0.0;
   out_4572680402772579634[8] = 0.0;
   out_4572680402772579634[9] = 0.0;
   out_4572680402772579634[10] = 0.0;
   out_4572680402772579634[11] = 0.0;
   out_4572680402772579634[12] = 0.0;
   out_4572680402772579634[13] = 0.0;
   out_4572680402772579634[14] = 0.0;
   out_4572680402772579634[15] = 0.0;
   out_4572680402772579634[16] = 0.0;
   out_4572680402772579634[17] = 0.0;
   out_4572680402772579634[18] = 0.0;
   out_4572680402772579634[19] = 0.0;
   out_4572680402772579634[20] = 0.0;
   out_4572680402772579634[21] = 0.0;
   out_4572680402772579634[22] = 1.0;
   out_4572680402772579634[23] = 0.0;
   out_4572680402772579634[24] = 0.0;
   out_4572680402772579634[25] = 0.0;
   out_4572680402772579634[26] = 0.0;
   out_4572680402772579634[27] = 0.0;
   out_4572680402772579634[28] = 0.0;
   out_4572680402772579634[29] = 0.0;
   out_4572680402772579634[30] = 0.0;
   out_4572680402772579634[31] = 0.0;
   out_4572680402772579634[32] = 0.0;
   out_4572680402772579634[33] = 0.0;
   out_4572680402772579634[34] = 0.0;
   out_4572680402772579634[35] = 0.0;
   out_4572680402772579634[36] = 0.0;
   out_4572680402772579634[37] = 0.0;
   out_4572680402772579634[38] = 0.0;
   out_4572680402772579634[39] = 0.0;
   out_4572680402772579634[40] = 0.0;
   out_4572680402772579634[41] = 0.0;
   out_4572680402772579634[42] = 0.0;
   out_4572680402772579634[43] = 0.0;
   out_4572680402772579634[44] = 1.0;
   out_4572680402772579634[45] = 0.0;
   out_4572680402772579634[46] = 0.0;
   out_4572680402772579634[47] = 0.0;
   out_4572680402772579634[48] = 0.0;
   out_4572680402772579634[49] = 0.0;
   out_4572680402772579634[50] = 0.0;
   out_4572680402772579634[51] = 0.0;
   out_4572680402772579634[52] = 0.0;
   out_4572680402772579634[53] = 0.0;
   out_4572680402772579634[54] = 0.0;
   out_4572680402772579634[55] = 0.0;
   out_4572680402772579634[56] = 0.0;
   out_4572680402772579634[57] = 0.0;
   out_4572680402772579634[58] = 0.0;
   out_4572680402772579634[59] = 0.0;
   out_4572680402772579634[60] = 0.0;
   out_4572680402772579634[61] = 0.0;
   out_4572680402772579634[62] = 0.0;
   out_4572680402772579634[63] = 0.0;
   out_4572680402772579634[64] = 0.0;
   out_4572680402772579634[65] = 0.0;
   out_4572680402772579634[66] = -0.5*state[4];
   out_4572680402772579634[67] = -0.5*state[5];
   out_4572680402772579634[68] = -0.5*state[6];
   out_4572680402772579634[69] = 0.0;
   out_4572680402772579634[70] = 0.0;
   out_4572680402772579634[71] = 0.0;
   out_4572680402772579634[72] = 0.0;
   out_4572680402772579634[73] = 0.0;
   out_4572680402772579634[74] = 0.0;
   out_4572680402772579634[75] = 0.0;
   out_4572680402772579634[76] = 0.0;
   out_4572680402772579634[77] = 0.0;
   out_4572680402772579634[78] = 0.0;
   out_4572680402772579634[79] = 0.0;
   out_4572680402772579634[80] = 0.0;
   out_4572680402772579634[81] = 0.0;
   out_4572680402772579634[82] = 0.0;
   out_4572680402772579634[83] = 0.0;
   out_4572680402772579634[84] = 0.0;
   out_4572680402772579634[85] = 0.0;
   out_4572680402772579634[86] = 0.0;
   out_4572680402772579634[87] = 0.5*state[3];
   out_4572680402772579634[88] = 0.5*state[6];
   out_4572680402772579634[89] = -0.5*state[5];
   out_4572680402772579634[90] = 0.0;
   out_4572680402772579634[91] = 0.0;
   out_4572680402772579634[92] = 0.0;
   out_4572680402772579634[93] = 0.0;
   out_4572680402772579634[94] = 0.0;
   out_4572680402772579634[95] = 0.0;
   out_4572680402772579634[96] = 0.0;
   out_4572680402772579634[97] = 0.0;
   out_4572680402772579634[98] = 0.0;
   out_4572680402772579634[99] = 0.0;
   out_4572680402772579634[100] = 0.0;
   out_4572680402772579634[101] = 0.0;
   out_4572680402772579634[102] = 0.0;
   out_4572680402772579634[103] = 0.0;
   out_4572680402772579634[104] = 0.0;
   out_4572680402772579634[105] = 0.0;
   out_4572680402772579634[106] = 0.0;
   out_4572680402772579634[107] = 0.0;
   out_4572680402772579634[108] = -0.5*state[6];
   out_4572680402772579634[109] = 0.5*state[3];
   out_4572680402772579634[110] = 0.5*state[4];
   out_4572680402772579634[111] = 0.0;
   out_4572680402772579634[112] = 0.0;
   out_4572680402772579634[113] = 0.0;
   out_4572680402772579634[114] = 0.0;
   out_4572680402772579634[115] = 0.0;
   out_4572680402772579634[116] = 0.0;
   out_4572680402772579634[117] = 0.0;
   out_4572680402772579634[118] = 0.0;
   out_4572680402772579634[119] = 0.0;
   out_4572680402772579634[120] = 0.0;
   out_4572680402772579634[121] = 0.0;
   out_4572680402772579634[122] = 0.0;
   out_4572680402772579634[123] = 0.0;
   out_4572680402772579634[124] = 0.0;
   out_4572680402772579634[125] = 0.0;
   out_4572680402772579634[126] = 0.0;
   out_4572680402772579634[127] = 0.0;
   out_4572680402772579634[128] = 0.0;
   out_4572680402772579634[129] = 0.5*state[5];
   out_4572680402772579634[130] = -0.5*state[4];
   out_4572680402772579634[131] = 0.5*state[3];
   out_4572680402772579634[132] = 0.0;
   out_4572680402772579634[133] = 0.0;
   out_4572680402772579634[134] = 0.0;
   out_4572680402772579634[135] = 0.0;
   out_4572680402772579634[136] = 0.0;
   out_4572680402772579634[137] = 0.0;
   out_4572680402772579634[138] = 0.0;
   out_4572680402772579634[139] = 0.0;
   out_4572680402772579634[140] = 0.0;
   out_4572680402772579634[141] = 0.0;
   out_4572680402772579634[142] = 0.0;
   out_4572680402772579634[143] = 0.0;
   out_4572680402772579634[144] = 0.0;
   out_4572680402772579634[145] = 0.0;
   out_4572680402772579634[146] = 0.0;
   out_4572680402772579634[147] = 0.0;
   out_4572680402772579634[148] = 0.0;
   out_4572680402772579634[149] = 0.0;
   out_4572680402772579634[150] = 0.0;
   out_4572680402772579634[151] = 0.0;
   out_4572680402772579634[152] = 0.0;
   out_4572680402772579634[153] = 1.0;
   out_4572680402772579634[154] = 0.0;
   out_4572680402772579634[155] = 0.0;
   out_4572680402772579634[156] = 0.0;
   out_4572680402772579634[157] = 0.0;
   out_4572680402772579634[158] = 0.0;
   out_4572680402772579634[159] = 0.0;
   out_4572680402772579634[160] = 0.0;
   out_4572680402772579634[161] = 0.0;
   out_4572680402772579634[162] = 0.0;
   out_4572680402772579634[163] = 0.0;
   out_4572680402772579634[164] = 0.0;
   out_4572680402772579634[165] = 0.0;
   out_4572680402772579634[166] = 0.0;
   out_4572680402772579634[167] = 0.0;
   out_4572680402772579634[168] = 0.0;
   out_4572680402772579634[169] = 0.0;
   out_4572680402772579634[170] = 0.0;
   out_4572680402772579634[171] = 0.0;
   out_4572680402772579634[172] = 0.0;
   out_4572680402772579634[173] = 0.0;
   out_4572680402772579634[174] = 0.0;
   out_4572680402772579634[175] = 1.0;
   out_4572680402772579634[176] = 0.0;
   out_4572680402772579634[177] = 0.0;
   out_4572680402772579634[178] = 0.0;
   out_4572680402772579634[179] = 0.0;
   out_4572680402772579634[180] = 0.0;
   out_4572680402772579634[181] = 0.0;
   out_4572680402772579634[182] = 0.0;
   out_4572680402772579634[183] = 0.0;
   out_4572680402772579634[184] = 0.0;
   out_4572680402772579634[185] = 0.0;
   out_4572680402772579634[186] = 0.0;
   out_4572680402772579634[187] = 0.0;
   out_4572680402772579634[188] = 0.0;
   out_4572680402772579634[189] = 0.0;
   out_4572680402772579634[190] = 0.0;
   out_4572680402772579634[191] = 0.0;
   out_4572680402772579634[192] = 0.0;
   out_4572680402772579634[193] = 0.0;
   out_4572680402772579634[194] = 0.0;
   out_4572680402772579634[195] = 0.0;
   out_4572680402772579634[196] = 0.0;
   out_4572680402772579634[197] = 1.0;
   out_4572680402772579634[198] = 0.0;
   out_4572680402772579634[199] = 0.0;
   out_4572680402772579634[200] = 0.0;
   out_4572680402772579634[201] = 0.0;
   out_4572680402772579634[202] = 0.0;
   out_4572680402772579634[203] = 0.0;
   out_4572680402772579634[204] = 0.0;
   out_4572680402772579634[205] = 0.0;
   out_4572680402772579634[206] = 0.0;
   out_4572680402772579634[207] = 0.0;
   out_4572680402772579634[208] = 0.0;
   out_4572680402772579634[209] = 0.0;
   out_4572680402772579634[210] = 0.0;
   out_4572680402772579634[211] = 0.0;
   out_4572680402772579634[212] = 0.0;
   out_4572680402772579634[213] = 0.0;
   out_4572680402772579634[214] = 0.0;
   out_4572680402772579634[215] = 0.0;
   out_4572680402772579634[216] = 0.0;
   out_4572680402772579634[217] = 0.0;
   out_4572680402772579634[218] = 0.0;
   out_4572680402772579634[219] = 1.0;
   out_4572680402772579634[220] = 0.0;
   out_4572680402772579634[221] = 0.0;
   out_4572680402772579634[222] = 0.0;
   out_4572680402772579634[223] = 0.0;
   out_4572680402772579634[224] = 0.0;
   out_4572680402772579634[225] = 0.0;
   out_4572680402772579634[226] = 0.0;
   out_4572680402772579634[227] = 0.0;
   out_4572680402772579634[228] = 0.0;
   out_4572680402772579634[229] = 0.0;
   out_4572680402772579634[230] = 0.0;
   out_4572680402772579634[231] = 0.0;
   out_4572680402772579634[232] = 0.0;
   out_4572680402772579634[233] = 0.0;
   out_4572680402772579634[234] = 0.0;
   out_4572680402772579634[235] = 0.0;
   out_4572680402772579634[236] = 0.0;
   out_4572680402772579634[237] = 0.0;
   out_4572680402772579634[238] = 0.0;
   out_4572680402772579634[239] = 0.0;
   out_4572680402772579634[240] = 0.0;
   out_4572680402772579634[241] = 1.0;
   out_4572680402772579634[242] = 0.0;
   out_4572680402772579634[243] = 0.0;
   out_4572680402772579634[244] = 0.0;
   out_4572680402772579634[245] = 0.0;
   out_4572680402772579634[246] = 0.0;
   out_4572680402772579634[247] = 0.0;
   out_4572680402772579634[248] = 0.0;
   out_4572680402772579634[249] = 0.0;
   out_4572680402772579634[250] = 0.0;
   out_4572680402772579634[251] = 0.0;
   out_4572680402772579634[252] = 0.0;
   out_4572680402772579634[253] = 0.0;
   out_4572680402772579634[254] = 0.0;
   out_4572680402772579634[255] = 0.0;
   out_4572680402772579634[256] = 0.0;
   out_4572680402772579634[257] = 0.0;
   out_4572680402772579634[258] = 0.0;
   out_4572680402772579634[259] = 0.0;
   out_4572680402772579634[260] = 0.0;
   out_4572680402772579634[261] = 0.0;
   out_4572680402772579634[262] = 0.0;
   out_4572680402772579634[263] = 1.0;
   out_4572680402772579634[264] = 0.0;
   out_4572680402772579634[265] = 0.0;
   out_4572680402772579634[266] = 0.0;
   out_4572680402772579634[267] = 0.0;
   out_4572680402772579634[268] = 0.0;
   out_4572680402772579634[269] = 0.0;
   out_4572680402772579634[270] = 0.0;
   out_4572680402772579634[271] = 0.0;
   out_4572680402772579634[272] = 0.0;
   out_4572680402772579634[273] = 0.0;
   out_4572680402772579634[274] = 0.0;
   out_4572680402772579634[275] = 0.0;
   out_4572680402772579634[276] = 0.0;
   out_4572680402772579634[277] = 0.0;
   out_4572680402772579634[278] = 0.0;
   out_4572680402772579634[279] = 0.0;
   out_4572680402772579634[280] = 0.0;
   out_4572680402772579634[281] = 0.0;
   out_4572680402772579634[282] = 0.0;
   out_4572680402772579634[283] = 0.0;
   out_4572680402772579634[284] = 0.0;
   out_4572680402772579634[285] = 1.0;
   out_4572680402772579634[286] = 0.0;
   out_4572680402772579634[287] = 0.0;
   out_4572680402772579634[288] = 0.0;
   out_4572680402772579634[289] = 0.0;
   out_4572680402772579634[290] = 0.0;
   out_4572680402772579634[291] = 0.0;
   out_4572680402772579634[292] = 0.0;
   out_4572680402772579634[293] = 0.0;
   out_4572680402772579634[294] = 0.0;
   out_4572680402772579634[295] = 0.0;
   out_4572680402772579634[296] = 0.0;
   out_4572680402772579634[297] = 0.0;
   out_4572680402772579634[298] = 0.0;
   out_4572680402772579634[299] = 0.0;
   out_4572680402772579634[300] = 0.0;
   out_4572680402772579634[301] = 0.0;
   out_4572680402772579634[302] = 0.0;
   out_4572680402772579634[303] = 0.0;
   out_4572680402772579634[304] = 0.0;
   out_4572680402772579634[305] = 0.0;
   out_4572680402772579634[306] = 0.0;
   out_4572680402772579634[307] = 1.0;
   out_4572680402772579634[308] = 0.0;
   out_4572680402772579634[309] = 0.0;
   out_4572680402772579634[310] = 0.0;
   out_4572680402772579634[311] = 0.0;
   out_4572680402772579634[312] = 0.0;
   out_4572680402772579634[313] = 0.0;
   out_4572680402772579634[314] = 0.0;
   out_4572680402772579634[315] = 0.0;
   out_4572680402772579634[316] = 0.0;
   out_4572680402772579634[317] = 0.0;
   out_4572680402772579634[318] = 0.0;
   out_4572680402772579634[319] = 0.0;
   out_4572680402772579634[320] = 0.0;
   out_4572680402772579634[321] = 0.0;
   out_4572680402772579634[322] = 0.0;
   out_4572680402772579634[323] = 0.0;
   out_4572680402772579634[324] = 0.0;
   out_4572680402772579634[325] = 0.0;
   out_4572680402772579634[326] = 0.0;
   out_4572680402772579634[327] = 0.0;
   out_4572680402772579634[328] = 0.0;
   out_4572680402772579634[329] = 1.0;
   out_4572680402772579634[330] = 0.0;
   out_4572680402772579634[331] = 0.0;
   out_4572680402772579634[332] = 0.0;
   out_4572680402772579634[333] = 0.0;
   out_4572680402772579634[334] = 0.0;
   out_4572680402772579634[335] = 0.0;
   out_4572680402772579634[336] = 0.0;
   out_4572680402772579634[337] = 0.0;
   out_4572680402772579634[338] = 0.0;
   out_4572680402772579634[339] = 0.0;
   out_4572680402772579634[340] = 0.0;
   out_4572680402772579634[341] = 0.0;
   out_4572680402772579634[342] = 0.0;
   out_4572680402772579634[343] = 0.0;
   out_4572680402772579634[344] = 0.0;
   out_4572680402772579634[345] = 0.0;
   out_4572680402772579634[346] = 0.0;
   out_4572680402772579634[347] = 0.0;
   out_4572680402772579634[348] = 0.0;
   out_4572680402772579634[349] = 0.0;
   out_4572680402772579634[350] = 0.0;
   out_4572680402772579634[351] = 1.0;
   out_4572680402772579634[352] = 0.0;
   out_4572680402772579634[353] = 0.0;
   out_4572680402772579634[354] = 0.0;
   out_4572680402772579634[355] = 0.0;
   out_4572680402772579634[356] = 0.0;
   out_4572680402772579634[357] = 0.0;
   out_4572680402772579634[358] = 0.0;
   out_4572680402772579634[359] = 0.0;
   out_4572680402772579634[360] = 0.0;
   out_4572680402772579634[361] = 0.0;
   out_4572680402772579634[362] = 0.0;
   out_4572680402772579634[363] = 0.0;
   out_4572680402772579634[364] = 0.0;
   out_4572680402772579634[365] = 0.0;
   out_4572680402772579634[366] = 0.0;
   out_4572680402772579634[367] = 0.0;
   out_4572680402772579634[368] = 0.0;
   out_4572680402772579634[369] = 0.0;
   out_4572680402772579634[370] = 0.0;
   out_4572680402772579634[371] = 0.0;
   out_4572680402772579634[372] = 0.0;
   out_4572680402772579634[373] = 1.0;
   out_4572680402772579634[374] = 0.0;
   out_4572680402772579634[375] = 0.0;
   out_4572680402772579634[376] = 0.0;
   out_4572680402772579634[377] = 0.0;
   out_4572680402772579634[378] = 0.0;
   out_4572680402772579634[379] = 0.0;
   out_4572680402772579634[380] = 0.0;
   out_4572680402772579634[381] = 0.0;
   out_4572680402772579634[382] = 0.0;
   out_4572680402772579634[383] = 0.0;
   out_4572680402772579634[384] = 0.0;
   out_4572680402772579634[385] = 0.0;
   out_4572680402772579634[386] = 0.0;
   out_4572680402772579634[387] = 0.0;
   out_4572680402772579634[388] = 0.0;
   out_4572680402772579634[389] = 0.0;
   out_4572680402772579634[390] = 0.0;
   out_4572680402772579634[391] = 0.0;
   out_4572680402772579634[392] = 0.0;
   out_4572680402772579634[393] = 0.0;
   out_4572680402772579634[394] = 0.0;
   out_4572680402772579634[395] = 1.0;
   out_4572680402772579634[396] = 0.0;
   out_4572680402772579634[397] = 0.0;
   out_4572680402772579634[398] = 0.0;
   out_4572680402772579634[399] = 0.0;
   out_4572680402772579634[400] = 0.0;
   out_4572680402772579634[401] = 0.0;
   out_4572680402772579634[402] = 0.0;
   out_4572680402772579634[403] = 0.0;
   out_4572680402772579634[404] = 0.0;
   out_4572680402772579634[405] = 0.0;
   out_4572680402772579634[406] = 0.0;
   out_4572680402772579634[407] = 0.0;
   out_4572680402772579634[408] = 0.0;
   out_4572680402772579634[409] = 0.0;
   out_4572680402772579634[410] = 0.0;
   out_4572680402772579634[411] = 0.0;
   out_4572680402772579634[412] = 0.0;
   out_4572680402772579634[413] = 0.0;
   out_4572680402772579634[414] = 0.0;
   out_4572680402772579634[415] = 0.0;
   out_4572680402772579634[416] = 0.0;
   out_4572680402772579634[417] = 1.0;
   out_4572680402772579634[418] = 0.0;
   out_4572680402772579634[419] = 0.0;
   out_4572680402772579634[420] = 0.0;
   out_4572680402772579634[421] = 0.0;
   out_4572680402772579634[422] = 0.0;
   out_4572680402772579634[423] = 0.0;
   out_4572680402772579634[424] = 0.0;
   out_4572680402772579634[425] = 0.0;
   out_4572680402772579634[426] = 0.0;
   out_4572680402772579634[427] = 0.0;
   out_4572680402772579634[428] = 0.0;
   out_4572680402772579634[429] = 0.0;
   out_4572680402772579634[430] = 0.0;
   out_4572680402772579634[431] = 0.0;
   out_4572680402772579634[432] = 0.0;
   out_4572680402772579634[433] = 0.0;
   out_4572680402772579634[434] = 0.0;
   out_4572680402772579634[435] = 0.0;
   out_4572680402772579634[436] = 0.0;
   out_4572680402772579634[437] = 0.0;
   out_4572680402772579634[438] = 0.0;
   out_4572680402772579634[439] = 1.0;
   out_4572680402772579634[440] = 0.0;
   out_4572680402772579634[441] = 0.0;
   out_4572680402772579634[442] = 0.0;
   out_4572680402772579634[443] = 0.0;
   out_4572680402772579634[444] = 0.0;
   out_4572680402772579634[445] = 0.0;
   out_4572680402772579634[446] = 0.0;
   out_4572680402772579634[447] = 0.0;
   out_4572680402772579634[448] = 0.0;
   out_4572680402772579634[449] = 0.0;
   out_4572680402772579634[450] = 0.0;
   out_4572680402772579634[451] = 0.0;
   out_4572680402772579634[452] = 0.0;
   out_4572680402772579634[453] = 0.0;
   out_4572680402772579634[454] = 0.0;
   out_4572680402772579634[455] = 0.0;
   out_4572680402772579634[456] = 0.0;
   out_4572680402772579634[457] = 0.0;
   out_4572680402772579634[458] = 0.0;
   out_4572680402772579634[459] = 0.0;
   out_4572680402772579634[460] = 0.0;
   out_4572680402772579634[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7823197626812359551) {
   out_7823197626812359551[0] = dt*state[7] + state[0];
   out_7823197626812359551[1] = dt*state[8] + state[1];
   out_7823197626812359551[2] = dt*state[9] + state[2];
   out_7823197626812359551[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7823197626812359551[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7823197626812359551[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7823197626812359551[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7823197626812359551[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7823197626812359551[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7823197626812359551[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7823197626812359551[10] = state[10];
   out_7823197626812359551[11] = state[11];
   out_7823197626812359551[12] = state[12];
   out_7823197626812359551[13] = state[13];
   out_7823197626812359551[14] = state[14];
   out_7823197626812359551[15] = state[15];
   out_7823197626812359551[16] = state[16];
   out_7823197626812359551[17] = state[17];
   out_7823197626812359551[18] = state[18];
   out_7823197626812359551[19] = state[19];
   out_7823197626812359551[20] = state[20];
   out_7823197626812359551[21] = state[21];
}
void F_fun(double *state, double dt, double *out_350263754613447254) {
   out_350263754613447254[0] = 1;
   out_350263754613447254[1] = 0;
   out_350263754613447254[2] = 0;
   out_350263754613447254[3] = 0;
   out_350263754613447254[4] = 0;
   out_350263754613447254[5] = 0;
   out_350263754613447254[6] = dt;
   out_350263754613447254[7] = 0;
   out_350263754613447254[8] = 0;
   out_350263754613447254[9] = 0;
   out_350263754613447254[10] = 0;
   out_350263754613447254[11] = 0;
   out_350263754613447254[12] = 0;
   out_350263754613447254[13] = 0;
   out_350263754613447254[14] = 0;
   out_350263754613447254[15] = 0;
   out_350263754613447254[16] = 0;
   out_350263754613447254[17] = 0;
   out_350263754613447254[18] = 0;
   out_350263754613447254[19] = 0;
   out_350263754613447254[20] = 0;
   out_350263754613447254[21] = 0;
   out_350263754613447254[22] = 1;
   out_350263754613447254[23] = 0;
   out_350263754613447254[24] = 0;
   out_350263754613447254[25] = 0;
   out_350263754613447254[26] = 0;
   out_350263754613447254[27] = 0;
   out_350263754613447254[28] = dt;
   out_350263754613447254[29] = 0;
   out_350263754613447254[30] = 0;
   out_350263754613447254[31] = 0;
   out_350263754613447254[32] = 0;
   out_350263754613447254[33] = 0;
   out_350263754613447254[34] = 0;
   out_350263754613447254[35] = 0;
   out_350263754613447254[36] = 0;
   out_350263754613447254[37] = 0;
   out_350263754613447254[38] = 0;
   out_350263754613447254[39] = 0;
   out_350263754613447254[40] = 0;
   out_350263754613447254[41] = 0;
   out_350263754613447254[42] = 0;
   out_350263754613447254[43] = 0;
   out_350263754613447254[44] = 1;
   out_350263754613447254[45] = 0;
   out_350263754613447254[46] = 0;
   out_350263754613447254[47] = 0;
   out_350263754613447254[48] = 0;
   out_350263754613447254[49] = 0;
   out_350263754613447254[50] = dt;
   out_350263754613447254[51] = 0;
   out_350263754613447254[52] = 0;
   out_350263754613447254[53] = 0;
   out_350263754613447254[54] = 0;
   out_350263754613447254[55] = 0;
   out_350263754613447254[56] = 0;
   out_350263754613447254[57] = 0;
   out_350263754613447254[58] = 0;
   out_350263754613447254[59] = 0;
   out_350263754613447254[60] = 0;
   out_350263754613447254[61] = 0;
   out_350263754613447254[62] = 0;
   out_350263754613447254[63] = 0;
   out_350263754613447254[64] = 0;
   out_350263754613447254[65] = 0;
   out_350263754613447254[66] = 1;
   out_350263754613447254[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_350263754613447254[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_350263754613447254[69] = 0;
   out_350263754613447254[70] = 0;
   out_350263754613447254[71] = 0;
   out_350263754613447254[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_350263754613447254[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_350263754613447254[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_350263754613447254[75] = 0;
   out_350263754613447254[76] = 0;
   out_350263754613447254[77] = 0;
   out_350263754613447254[78] = 0;
   out_350263754613447254[79] = 0;
   out_350263754613447254[80] = 0;
   out_350263754613447254[81] = 0;
   out_350263754613447254[82] = 0;
   out_350263754613447254[83] = 0;
   out_350263754613447254[84] = 0;
   out_350263754613447254[85] = 0;
   out_350263754613447254[86] = 0;
   out_350263754613447254[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_350263754613447254[88] = 1;
   out_350263754613447254[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_350263754613447254[90] = 0;
   out_350263754613447254[91] = 0;
   out_350263754613447254[92] = 0;
   out_350263754613447254[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_350263754613447254[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_350263754613447254[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_350263754613447254[96] = 0;
   out_350263754613447254[97] = 0;
   out_350263754613447254[98] = 0;
   out_350263754613447254[99] = 0;
   out_350263754613447254[100] = 0;
   out_350263754613447254[101] = 0;
   out_350263754613447254[102] = 0;
   out_350263754613447254[103] = 0;
   out_350263754613447254[104] = 0;
   out_350263754613447254[105] = 0;
   out_350263754613447254[106] = 0;
   out_350263754613447254[107] = 0;
   out_350263754613447254[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_350263754613447254[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_350263754613447254[110] = 1;
   out_350263754613447254[111] = 0;
   out_350263754613447254[112] = 0;
   out_350263754613447254[113] = 0;
   out_350263754613447254[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_350263754613447254[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_350263754613447254[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_350263754613447254[117] = 0;
   out_350263754613447254[118] = 0;
   out_350263754613447254[119] = 0;
   out_350263754613447254[120] = 0;
   out_350263754613447254[121] = 0;
   out_350263754613447254[122] = 0;
   out_350263754613447254[123] = 0;
   out_350263754613447254[124] = 0;
   out_350263754613447254[125] = 0;
   out_350263754613447254[126] = 0;
   out_350263754613447254[127] = 0;
   out_350263754613447254[128] = 0;
   out_350263754613447254[129] = 0;
   out_350263754613447254[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_350263754613447254[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_350263754613447254[132] = 1;
   out_350263754613447254[133] = 0;
   out_350263754613447254[134] = 0;
   out_350263754613447254[135] = 0;
   out_350263754613447254[136] = 0;
   out_350263754613447254[137] = 0;
   out_350263754613447254[138] = 0;
   out_350263754613447254[139] = 0;
   out_350263754613447254[140] = 0;
   out_350263754613447254[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_350263754613447254[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_350263754613447254[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_350263754613447254[144] = 0;
   out_350263754613447254[145] = 0;
   out_350263754613447254[146] = 0;
   out_350263754613447254[147] = 0;
   out_350263754613447254[148] = 0;
   out_350263754613447254[149] = 0;
   out_350263754613447254[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_350263754613447254[151] = 0;
   out_350263754613447254[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_350263754613447254[153] = 0;
   out_350263754613447254[154] = 1;
   out_350263754613447254[155] = 0;
   out_350263754613447254[156] = 0;
   out_350263754613447254[157] = 0;
   out_350263754613447254[158] = 0;
   out_350263754613447254[159] = 0;
   out_350263754613447254[160] = 0;
   out_350263754613447254[161] = 0;
   out_350263754613447254[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_350263754613447254[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_350263754613447254[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_350263754613447254[165] = 0;
   out_350263754613447254[166] = 0;
   out_350263754613447254[167] = 0;
   out_350263754613447254[168] = 0;
   out_350263754613447254[169] = 0;
   out_350263754613447254[170] = 0;
   out_350263754613447254[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_350263754613447254[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_350263754613447254[173] = 0;
   out_350263754613447254[174] = 0;
   out_350263754613447254[175] = 0;
   out_350263754613447254[176] = 1;
   out_350263754613447254[177] = 0;
   out_350263754613447254[178] = 0;
   out_350263754613447254[179] = 0;
   out_350263754613447254[180] = 0;
   out_350263754613447254[181] = 0;
   out_350263754613447254[182] = 0;
   out_350263754613447254[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_350263754613447254[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_350263754613447254[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_350263754613447254[186] = 0;
   out_350263754613447254[187] = 0;
   out_350263754613447254[188] = 0;
   out_350263754613447254[189] = 0;
   out_350263754613447254[190] = 0;
   out_350263754613447254[191] = 0;
   out_350263754613447254[192] = 0;
   out_350263754613447254[193] = 0;
   out_350263754613447254[194] = 0;
   out_350263754613447254[195] = 0;
   out_350263754613447254[196] = 0;
   out_350263754613447254[197] = 0;
   out_350263754613447254[198] = 1;
   out_350263754613447254[199] = 0;
   out_350263754613447254[200] = 0;
   out_350263754613447254[201] = 0;
   out_350263754613447254[202] = 0;
   out_350263754613447254[203] = 0;
   out_350263754613447254[204] = 0;
   out_350263754613447254[205] = 0;
   out_350263754613447254[206] = 0;
   out_350263754613447254[207] = 0;
   out_350263754613447254[208] = 0;
   out_350263754613447254[209] = 0;
   out_350263754613447254[210] = 0;
   out_350263754613447254[211] = 0;
   out_350263754613447254[212] = 0;
   out_350263754613447254[213] = 0;
   out_350263754613447254[214] = 0;
   out_350263754613447254[215] = 0;
   out_350263754613447254[216] = 0;
   out_350263754613447254[217] = 0;
   out_350263754613447254[218] = 0;
   out_350263754613447254[219] = 0;
   out_350263754613447254[220] = 1;
   out_350263754613447254[221] = 0;
   out_350263754613447254[222] = 0;
   out_350263754613447254[223] = 0;
   out_350263754613447254[224] = 0;
   out_350263754613447254[225] = 0;
   out_350263754613447254[226] = 0;
   out_350263754613447254[227] = 0;
   out_350263754613447254[228] = 0;
   out_350263754613447254[229] = 0;
   out_350263754613447254[230] = 0;
   out_350263754613447254[231] = 0;
   out_350263754613447254[232] = 0;
   out_350263754613447254[233] = 0;
   out_350263754613447254[234] = 0;
   out_350263754613447254[235] = 0;
   out_350263754613447254[236] = 0;
   out_350263754613447254[237] = 0;
   out_350263754613447254[238] = 0;
   out_350263754613447254[239] = 0;
   out_350263754613447254[240] = 0;
   out_350263754613447254[241] = 0;
   out_350263754613447254[242] = 1;
   out_350263754613447254[243] = 0;
   out_350263754613447254[244] = 0;
   out_350263754613447254[245] = 0;
   out_350263754613447254[246] = 0;
   out_350263754613447254[247] = 0;
   out_350263754613447254[248] = 0;
   out_350263754613447254[249] = 0;
   out_350263754613447254[250] = 0;
   out_350263754613447254[251] = 0;
   out_350263754613447254[252] = 0;
   out_350263754613447254[253] = 0;
   out_350263754613447254[254] = 0;
   out_350263754613447254[255] = 0;
   out_350263754613447254[256] = 0;
   out_350263754613447254[257] = 0;
   out_350263754613447254[258] = 0;
   out_350263754613447254[259] = 0;
   out_350263754613447254[260] = 0;
   out_350263754613447254[261] = 0;
   out_350263754613447254[262] = 0;
   out_350263754613447254[263] = 0;
   out_350263754613447254[264] = 1;
   out_350263754613447254[265] = 0;
   out_350263754613447254[266] = 0;
   out_350263754613447254[267] = 0;
   out_350263754613447254[268] = 0;
   out_350263754613447254[269] = 0;
   out_350263754613447254[270] = 0;
   out_350263754613447254[271] = 0;
   out_350263754613447254[272] = 0;
   out_350263754613447254[273] = 0;
   out_350263754613447254[274] = 0;
   out_350263754613447254[275] = 0;
   out_350263754613447254[276] = 0;
   out_350263754613447254[277] = 0;
   out_350263754613447254[278] = 0;
   out_350263754613447254[279] = 0;
   out_350263754613447254[280] = 0;
   out_350263754613447254[281] = 0;
   out_350263754613447254[282] = 0;
   out_350263754613447254[283] = 0;
   out_350263754613447254[284] = 0;
   out_350263754613447254[285] = 0;
   out_350263754613447254[286] = 1;
   out_350263754613447254[287] = 0;
   out_350263754613447254[288] = 0;
   out_350263754613447254[289] = 0;
   out_350263754613447254[290] = 0;
   out_350263754613447254[291] = 0;
   out_350263754613447254[292] = 0;
   out_350263754613447254[293] = 0;
   out_350263754613447254[294] = 0;
   out_350263754613447254[295] = 0;
   out_350263754613447254[296] = 0;
   out_350263754613447254[297] = 0;
   out_350263754613447254[298] = 0;
   out_350263754613447254[299] = 0;
   out_350263754613447254[300] = 0;
   out_350263754613447254[301] = 0;
   out_350263754613447254[302] = 0;
   out_350263754613447254[303] = 0;
   out_350263754613447254[304] = 0;
   out_350263754613447254[305] = 0;
   out_350263754613447254[306] = 0;
   out_350263754613447254[307] = 0;
   out_350263754613447254[308] = 1;
   out_350263754613447254[309] = 0;
   out_350263754613447254[310] = 0;
   out_350263754613447254[311] = 0;
   out_350263754613447254[312] = 0;
   out_350263754613447254[313] = 0;
   out_350263754613447254[314] = 0;
   out_350263754613447254[315] = 0;
   out_350263754613447254[316] = 0;
   out_350263754613447254[317] = 0;
   out_350263754613447254[318] = 0;
   out_350263754613447254[319] = 0;
   out_350263754613447254[320] = 0;
   out_350263754613447254[321] = 0;
   out_350263754613447254[322] = 0;
   out_350263754613447254[323] = 0;
   out_350263754613447254[324] = 0;
   out_350263754613447254[325] = 0;
   out_350263754613447254[326] = 0;
   out_350263754613447254[327] = 0;
   out_350263754613447254[328] = 0;
   out_350263754613447254[329] = 0;
   out_350263754613447254[330] = 1;
   out_350263754613447254[331] = 0;
   out_350263754613447254[332] = 0;
   out_350263754613447254[333] = 0;
   out_350263754613447254[334] = 0;
   out_350263754613447254[335] = 0;
   out_350263754613447254[336] = 0;
   out_350263754613447254[337] = 0;
   out_350263754613447254[338] = 0;
   out_350263754613447254[339] = 0;
   out_350263754613447254[340] = 0;
   out_350263754613447254[341] = 0;
   out_350263754613447254[342] = 0;
   out_350263754613447254[343] = 0;
   out_350263754613447254[344] = 0;
   out_350263754613447254[345] = 0;
   out_350263754613447254[346] = 0;
   out_350263754613447254[347] = 0;
   out_350263754613447254[348] = 0;
   out_350263754613447254[349] = 0;
   out_350263754613447254[350] = 0;
   out_350263754613447254[351] = 0;
   out_350263754613447254[352] = 1;
   out_350263754613447254[353] = 0;
   out_350263754613447254[354] = 0;
   out_350263754613447254[355] = 0;
   out_350263754613447254[356] = 0;
   out_350263754613447254[357] = 0;
   out_350263754613447254[358] = 0;
   out_350263754613447254[359] = 0;
   out_350263754613447254[360] = 0;
   out_350263754613447254[361] = 0;
   out_350263754613447254[362] = 0;
   out_350263754613447254[363] = 0;
   out_350263754613447254[364] = 0;
   out_350263754613447254[365] = 0;
   out_350263754613447254[366] = 0;
   out_350263754613447254[367] = 0;
   out_350263754613447254[368] = 0;
   out_350263754613447254[369] = 0;
   out_350263754613447254[370] = 0;
   out_350263754613447254[371] = 0;
   out_350263754613447254[372] = 0;
   out_350263754613447254[373] = 0;
   out_350263754613447254[374] = 1;
   out_350263754613447254[375] = 0;
   out_350263754613447254[376] = 0;
   out_350263754613447254[377] = 0;
   out_350263754613447254[378] = 0;
   out_350263754613447254[379] = 0;
   out_350263754613447254[380] = 0;
   out_350263754613447254[381] = 0;
   out_350263754613447254[382] = 0;
   out_350263754613447254[383] = 0;
   out_350263754613447254[384] = 0;
   out_350263754613447254[385] = 0;
   out_350263754613447254[386] = 0;
   out_350263754613447254[387] = 0;
   out_350263754613447254[388] = 0;
   out_350263754613447254[389] = 0;
   out_350263754613447254[390] = 0;
   out_350263754613447254[391] = 0;
   out_350263754613447254[392] = 0;
   out_350263754613447254[393] = 0;
   out_350263754613447254[394] = 0;
   out_350263754613447254[395] = 0;
   out_350263754613447254[396] = 1;
   out_350263754613447254[397] = 0;
   out_350263754613447254[398] = 0;
   out_350263754613447254[399] = 0;
   out_350263754613447254[400] = 0;
   out_350263754613447254[401] = 0;
   out_350263754613447254[402] = 0;
   out_350263754613447254[403] = 0;
   out_350263754613447254[404] = 0;
   out_350263754613447254[405] = 0;
   out_350263754613447254[406] = 0;
   out_350263754613447254[407] = 0;
   out_350263754613447254[408] = 0;
   out_350263754613447254[409] = 0;
   out_350263754613447254[410] = 0;
   out_350263754613447254[411] = 0;
   out_350263754613447254[412] = 0;
   out_350263754613447254[413] = 0;
   out_350263754613447254[414] = 0;
   out_350263754613447254[415] = 0;
   out_350263754613447254[416] = 0;
   out_350263754613447254[417] = 0;
   out_350263754613447254[418] = 1;
   out_350263754613447254[419] = 0;
   out_350263754613447254[420] = 0;
   out_350263754613447254[421] = 0;
   out_350263754613447254[422] = 0;
   out_350263754613447254[423] = 0;
   out_350263754613447254[424] = 0;
   out_350263754613447254[425] = 0;
   out_350263754613447254[426] = 0;
   out_350263754613447254[427] = 0;
   out_350263754613447254[428] = 0;
   out_350263754613447254[429] = 0;
   out_350263754613447254[430] = 0;
   out_350263754613447254[431] = 0;
   out_350263754613447254[432] = 0;
   out_350263754613447254[433] = 0;
   out_350263754613447254[434] = 0;
   out_350263754613447254[435] = 0;
   out_350263754613447254[436] = 0;
   out_350263754613447254[437] = 0;
   out_350263754613447254[438] = 0;
   out_350263754613447254[439] = 0;
   out_350263754613447254[440] = 1;
}
void h_4(double *state, double *unused, double *out_1228675592078714749) {
   out_1228675592078714749[0] = state[10] + state[13];
   out_1228675592078714749[1] = state[11] + state[14];
   out_1228675592078714749[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6543490681844391960) {
   out_6543490681844391960[0] = 0;
   out_6543490681844391960[1] = 0;
   out_6543490681844391960[2] = 0;
   out_6543490681844391960[3] = 0;
   out_6543490681844391960[4] = 0;
   out_6543490681844391960[5] = 0;
   out_6543490681844391960[6] = 0;
   out_6543490681844391960[7] = 0;
   out_6543490681844391960[8] = 0;
   out_6543490681844391960[9] = 0;
   out_6543490681844391960[10] = 1;
   out_6543490681844391960[11] = 0;
   out_6543490681844391960[12] = 0;
   out_6543490681844391960[13] = 1;
   out_6543490681844391960[14] = 0;
   out_6543490681844391960[15] = 0;
   out_6543490681844391960[16] = 0;
   out_6543490681844391960[17] = 0;
   out_6543490681844391960[18] = 0;
   out_6543490681844391960[19] = 0;
   out_6543490681844391960[20] = 0;
   out_6543490681844391960[21] = 0;
   out_6543490681844391960[22] = 0;
   out_6543490681844391960[23] = 0;
   out_6543490681844391960[24] = 0;
   out_6543490681844391960[25] = 0;
   out_6543490681844391960[26] = 0;
   out_6543490681844391960[27] = 0;
   out_6543490681844391960[28] = 0;
   out_6543490681844391960[29] = 0;
   out_6543490681844391960[30] = 0;
   out_6543490681844391960[31] = 0;
   out_6543490681844391960[32] = 0;
   out_6543490681844391960[33] = 1;
   out_6543490681844391960[34] = 0;
   out_6543490681844391960[35] = 0;
   out_6543490681844391960[36] = 1;
   out_6543490681844391960[37] = 0;
   out_6543490681844391960[38] = 0;
   out_6543490681844391960[39] = 0;
   out_6543490681844391960[40] = 0;
   out_6543490681844391960[41] = 0;
   out_6543490681844391960[42] = 0;
   out_6543490681844391960[43] = 0;
   out_6543490681844391960[44] = 0;
   out_6543490681844391960[45] = 0;
   out_6543490681844391960[46] = 0;
   out_6543490681844391960[47] = 0;
   out_6543490681844391960[48] = 0;
   out_6543490681844391960[49] = 0;
   out_6543490681844391960[50] = 0;
   out_6543490681844391960[51] = 0;
   out_6543490681844391960[52] = 0;
   out_6543490681844391960[53] = 0;
   out_6543490681844391960[54] = 0;
   out_6543490681844391960[55] = 0;
   out_6543490681844391960[56] = 1;
   out_6543490681844391960[57] = 0;
   out_6543490681844391960[58] = 0;
   out_6543490681844391960[59] = 1;
   out_6543490681844391960[60] = 0;
   out_6543490681844391960[61] = 0;
   out_6543490681844391960[62] = 0;
   out_6543490681844391960[63] = 0;
   out_6543490681844391960[64] = 0;
   out_6543490681844391960[65] = 0;
}
void h_9(double *state, double *unused, double *out_5078662012341720751) {
   out_5078662012341720751[0] = state[10];
   out_5078662012341720751[1] = state[11];
   out_5078662012341720751[2] = state[12];
}
void H_9(double *state, double *unused, double *out_743728253420055510) {
   out_743728253420055510[0] = 0;
   out_743728253420055510[1] = 0;
   out_743728253420055510[2] = 0;
   out_743728253420055510[3] = 0;
   out_743728253420055510[4] = 0;
   out_743728253420055510[5] = 0;
   out_743728253420055510[6] = 0;
   out_743728253420055510[7] = 0;
   out_743728253420055510[8] = 0;
   out_743728253420055510[9] = 0;
   out_743728253420055510[10] = 1;
   out_743728253420055510[11] = 0;
   out_743728253420055510[12] = 0;
   out_743728253420055510[13] = 0;
   out_743728253420055510[14] = 0;
   out_743728253420055510[15] = 0;
   out_743728253420055510[16] = 0;
   out_743728253420055510[17] = 0;
   out_743728253420055510[18] = 0;
   out_743728253420055510[19] = 0;
   out_743728253420055510[20] = 0;
   out_743728253420055510[21] = 0;
   out_743728253420055510[22] = 0;
   out_743728253420055510[23] = 0;
   out_743728253420055510[24] = 0;
   out_743728253420055510[25] = 0;
   out_743728253420055510[26] = 0;
   out_743728253420055510[27] = 0;
   out_743728253420055510[28] = 0;
   out_743728253420055510[29] = 0;
   out_743728253420055510[30] = 0;
   out_743728253420055510[31] = 0;
   out_743728253420055510[32] = 0;
   out_743728253420055510[33] = 1;
   out_743728253420055510[34] = 0;
   out_743728253420055510[35] = 0;
   out_743728253420055510[36] = 0;
   out_743728253420055510[37] = 0;
   out_743728253420055510[38] = 0;
   out_743728253420055510[39] = 0;
   out_743728253420055510[40] = 0;
   out_743728253420055510[41] = 0;
   out_743728253420055510[42] = 0;
   out_743728253420055510[43] = 0;
   out_743728253420055510[44] = 0;
   out_743728253420055510[45] = 0;
   out_743728253420055510[46] = 0;
   out_743728253420055510[47] = 0;
   out_743728253420055510[48] = 0;
   out_743728253420055510[49] = 0;
   out_743728253420055510[50] = 0;
   out_743728253420055510[51] = 0;
   out_743728253420055510[52] = 0;
   out_743728253420055510[53] = 0;
   out_743728253420055510[54] = 0;
   out_743728253420055510[55] = 0;
   out_743728253420055510[56] = 1;
   out_743728253420055510[57] = 0;
   out_743728253420055510[58] = 0;
   out_743728253420055510[59] = 0;
   out_743728253420055510[60] = 0;
   out_743728253420055510[61] = 0;
   out_743728253420055510[62] = 0;
   out_743728253420055510[63] = 0;
   out_743728253420055510[64] = 0;
   out_743728253420055510[65] = 0;
}
void h_10(double *state, double *unused, double *out_854738547976412628) {
   out_854738547976412628[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_854738547976412628[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_854738547976412628[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2209412934872969411) {
   out_2209412934872969411[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2209412934872969411[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2209412934872969411[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2209412934872969411[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2209412934872969411[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2209412934872969411[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2209412934872969411[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2209412934872969411[7] = 0;
   out_2209412934872969411[8] = 0;
   out_2209412934872969411[9] = 0;
   out_2209412934872969411[10] = 0;
   out_2209412934872969411[11] = 0;
   out_2209412934872969411[12] = 0;
   out_2209412934872969411[13] = 0;
   out_2209412934872969411[14] = 0;
   out_2209412934872969411[15] = 0;
   out_2209412934872969411[16] = 1;
   out_2209412934872969411[17] = 0;
   out_2209412934872969411[18] = 0;
   out_2209412934872969411[19] = 1;
   out_2209412934872969411[20] = 0;
   out_2209412934872969411[21] = 0;
   out_2209412934872969411[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2209412934872969411[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2209412934872969411[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2209412934872969411[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2209412934872969411[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2209412934872969411[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2209412934872969411[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2209412934872969411[29] = 0;
   out_2209412934872969411[30] = 0;
   out_2209412934872969411[31] = 0;
   out_2209412934872969411[32] = 0;
   out_2209412934872969411[33] = 0;
   out_2209412934872969411[34] = 0;
   out_2209412934872969411[35] = 0;
   out_2209412934872969411[36] = 0;
   out_2209412934872969411[37] = 0;
   out_2209412934872969411[38] = 0;
   out_2209412934872969411[39] = 1;
   out_2209412934872969411[40] = 0;
   out_2209412934872969411[41] = 0;
   out_2209412934872969411[42] = 1;
   out_2209412934872969411[43] = 0;
   out_2209412934872969411[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2209412934872969411[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2209412934872969411[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2209412934872969411[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2209412934872969411[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2209412934872969411[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2209412934872969411[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2209412934872969411[51] = 0;
   out_2209412934872969411[52] = 0;
   out_2209412934872969411[53] = 0;
   out_2209412934872969411[54] = 0;
   out_2209412934872969411[55] = 0;
   out_2209412934872969411[56] = 0;
   out_2209412934872969411[57] = 0;
   out_2209412934872969411[58] = 0;
   out_2209412934872969411[59] = 0;
   out_2209412934872969411[60] = 0;
   out_2209412934872969411[61] = 0;
   out_2209412934872969411[62] = 1;
   out_2209412934872969411[63] = 0;
   out_2209412934872969411[64] = 0;
   out_2209412934872969411[65] = 1;
}
void h_12(double *state, double *unused, double *out_4011620689457812030) {
   out_4011620689457812030[0] = state[0];
   out_4011620689457812030[1] = state[1];
   out_4011620689457812030[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5521995014822426660) {
   out_5521995014822426660[0] = 1;
   out_5521995014822426660[1] = 0;
   out_5521995014822426660[2] = 0;
   out_5521995014822426660[3] = 0;
   out_5521995014822426660[4] = 0;
   out_5521995014822426660[5] = 0;
   out_5521995014822426660[6] = 0;
   out_5521995014822426660[7] = 0;
   out_5521995014822426660[8] = 0;
   out_5521995014822426660[9] = 0;
   out_5521995014822426660[10] = 0;
   out_5521995014822426660[11] = 0;
   out_5521995014822426660[12] = 0;
   out_5521995014822426660[13] = 0;
   out_5521995014822426660[14] = 0;
   out_5521995014822426660[15] = 0;
   out_5521995014822426660[16] = 0;
   out_5521995014822426660[17] = 0;
   out_5521995014822426660[18] = 0;
   out_5521995014822426660[19] = 0;
   out_5521995014822426660[20] = 0;
   out_5521995014822426660[21] = 0;
   out_5521995014822426660[22] = 0;
   out_5521995014822426660[23] = 1;
   out_5521995014822426660[24] = 0;
   out_5521995014822426660[25] = 0;
   out_5521995014822426660[26] = 0;
   out_5521995014822426660[27] = 0;
   out_5521995014822426660[28] = 0;
   out_5521995014822426660[29] = 0;
   out_5521995014822426660[30] = 0;
   out_5521995014822426660[31] = 0;
   out_5521995014822426660[32] = 0;
   out_5521995014822426660[33] = 0;
   out_5521995014822426660[34] = 0;
   out_5521995014822426660[35] = 0;
   out_5521995014822426660[36] = 0;
   out_5521995014822426660[37] = 0;
   out_5521995014822426660[38] = 0;
   out_5521995014822426660[39] = 0;
   out_5521995014822426660[40] = 0;
   out_5521995014822426660[41] = 0;
   out_5521995014822426660[42] = 0;
   out_5521995014822426660[43] = 0;
   out_5521995014822426660[44] = 0;
   out_5521995014822426660[45] = 0;
   out_5521995014822426660[46] = 1;
   out_5521995014822426660[47] = 0;
   out_5521995014822426660[48] = 0;
   out_5521995014822426660[49] = 0;
   out_5521995014822426660[50] = 0;
   out_5521995014822426660[51] = 0;
   out_5521995014822426660[52] = 0;
   out_5521995014822426660[53] = 0;
   out_5521995014822426660[54] = 0;
   out_5521995014822426660[55] = 0;
   out_5521995014822426660[56] = 0;
   out_5521995014822426660[57] = 0;
   out_5521995014822426660[58] = 0;
   out_5521995014822426660[59] = 0;
   out_5521995014822426660[60] = 0;
   out_5521995014822426660[61] = 0;
   out_5521995014822426660[62] = 0;
   out_5521995014822426660[63] = 0;
   out_5521995014822426660[64] = 0;
   out_5521995014822426660[65] = 0;
}
void h_31(double *state, double *unused, double *out_5651320870718150641) {
   out_5651320870718150641[0] = state[7];
   out_5651320870718150641[1] = state[8];
   out_5651320870718150641[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1221528758512583544) {
   out_1221528758512583544[0] = 0;
   out_1221528758512583544[1] = 0;
   out_1221528758512583544[2] = 0;
   out_1221528758512583544[3] = 0;
   out_1221528758512583544[4] = 0;
   out_1221528758512583544[5] = 0;
   out_1221528758512583544[6] = 0;
   out_1221528758512583544[7] = 1;
   out_1221528758512583544[8] = 0;
   out_1221528758512583544[9] = 0;
   out_1221528758512583544[10] = 0;
   out_1221528758512583544[11] = 0;
   out_1221528758512583544[12] = 0;
   out_1221528758512583544[13] = 0;
   out_1221528758512583544[14] = 0;
   out_1221528758512583544[15] = 0;
   out_1221528758512583544[16] = 0;
   out_1221528758512583544[17] = 0;
   out_1221528758512583544[18] = 0;
   out_1221528758512583544[19] = 0;
   out_1221528758512583544[20] = 0;
   out_1221528758512583544[21] = 0;
   out_1221528758512583544[22] = 0;
   out_1221528758512583544[23] = 0;
   out_1221528758512583544[24] = 0;
   out_1221528758512583544[25] = 0;
   out_1221528758512583544[26] = 0;
   out_1221528758512583544[27] = 0;
   out_1221528758512583544[28] = 0;
   out_1221528758512583544[29] = 0;
   out_1221528758512583544[30] = 1;
   out_1221528758512583544[31] = 0;
   out_1221528758512583544[32] = 0;
   out_1221528758512583544[33] = 0;
   out_1221528758512583544[34] = 0;
   out_1221528758512583544[35] = 0;
   out_1221528758512583544[36] = 0;
   out_1221528758512583544[37] = 0;
   out_1221528758512583544[38] = 0;
   out_1221528758512583544[39] = 0;
   out_1221528758512583544[40] = 0;
   out_1221528758512583544[41] = 0;
   out_1221528758512583544[42] = 0;
   out_1221528758512583544[43] = 0;
   out_1221528758512583544[44] = 0;
   out_1221528758512583544[45] = 0;
   out_1221528758512583544[46] = 0;
   out_1221528758512583544[47] = 0;
   out_1221528758512583544[48] = 0;
   out_1221528758512583544[49] = 0;
   out_1221528758512583544[50] = 0;
   out_1221528758512583544[51] = 0;
   out_1221528758512583544[52] = 0;
   out_1221528758512583544[53] = 1;
   out_1221528758512583544[54] = 0;
   out_1221528758512583544[55] = 0;
   out_1221528758512583544[56] = 0;
   out_1221528758512583544[57] = 0;
   out_1221528758512583544[58] = 0;
   out_1221528758512583544[59] = 0;
   out_1221528758512583544[60] = 0;
   out_1221528758512583544[61] = 0;
   out_1221528758512583544[62] = 0;
   out_1221528758512583544[63] = 0;
   out_1221528758512583544[64] = 0;
   out_1221528758512583544[65] = 0;
}
void h_32(double *state, double *unused, double *out_3573880032566032592) {
   out_3573880032566032592[0] = state[3];
   out_3573880032566032592[1] = state[4];
   out_3573880032566032592[2] = state[5];
   out_3573880032566032592[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3045663839531044115) {
   out_3045663839531044115[0] = 0;
   out_3045663839531044115[1] = 0;
   out_3045663839531044115[2] = 0;
   out_3045663839531044115[3] = 1;
   out_3045663839531044115[4] = 0;
   out_3045663839531044115[5] = 0;
   out_3045663839531044115[6] = 0;
   out_3045663839531044115[7] = 0;
   out_3045663839531044115[8] = 0;
   out_3045663839531044115[9] = 0;
   out_3045663839531044115[10] = 0;
   out_3045663839531044115[11] = 0;
   out_3045663839531044115[12] = 0;
   out_3045663839531044115[13] = 0;
   out_3045663839531044115[14] = 0;
   out_3045663839531044115[15] = 0;
   out_3045663839531044115[16] = 0;
   out_3045663839531044115[17] = 0;
   out_3045663839531044115[18] = 0;
   out_3045663839531044115[19] = 0;
   out_3045663839531044115[20] = 0;
   out_3045663839531044115[21] = 0;
   out_3045663839531044115[22] = 0;
   out_3045663839531044115[23] = 0;
   out_3045663839531044115[24] = 0;
   out_3045663839531044115[25] = 0;
   out_3045663839531044115[26] = 1;
   out_3045663839531044115[27] = 0;
   out_3045663839531044115[28] = 0;
   out_3045663839531044115[29] = 0;
   out_3045663839531044115[30] = 0;
   out_3045663839531044115[31] = 0;
   out_3045663839531044115[32] = 0;
   out_3045663839531044115[33] = 0;
   out_3045663839531044115[34] = 0;
   out_3045663839531044115[35] = 0;
   out_3045663839531044115[36] = 0;
   out_3045663839531044115[37] = 0;
   out_3045663839531044115[38] = 0;
   out_3045663839531044115[39] = 0;
   out_3045663839531044115[40] = 0;
   out_3045663839531044115[41] = 0;
   out_3045663839531044115[42] = 0;
   out_3045663839531044115[43] = 0;
   out_3045663839531044115[44] = 0;
   out_3045663839531044115[45] = 0;
   out_3045663839531044115[46] = 0;
   out_3045663839531044115[47] = 0;
   out_3045663839531044115[48] = 0;
   out_3045663839531044115[49] = 1;
   out_3045663839531044115[50] = 0;
   out_3045663839531044115[51] = 0;
   out_3045663839531044115[52] = 0;
   out_3045663839531044115[53] = 0;
   out_3045663839531044115[54] = 0;
   out_3045663839531044115[55] = 0;
   out_3045663839531044115[56] = 0;
   out_3045663839531044115[57] = 0;
   out_3045663839531044115[58] = 0;
   out_3045663839531044115[59] = 0;
   out_3045663839531044115[60] = 0;
   out_3045663839531044115[61] = 0;
   out_3045663839531044115[62] = 0;
   out_3045663839531044115[63] = 0;
   out_3045663839531044115[64] = 0;
   out_3045663839531044115[65] = 0;
   out_3045663839531044115[66] = 0;
   out_3045663839531044115[67] = 0;
   out_3045663839531044115[68] = 0;
   out_3045663839531044115[69] = 0;
   out_3045663839531044115[70] = 0;
   out_3045663839531044115[71] = 0;
   out_3045663839531044115[72] = 1;
   out_3045663839531044115[73] = 0;
   out_3045663839531044115[74] = 0;
   out_3045663839531044115[75] = 0;
   out_3045663839531044115[76] = 0;
   out_3045663839531044115[77] = 0;
   out_3045663839531044115[78] = 0;
   out_3045663839531044115[79] = 0;
   out_3045663839531044115[80] = 0;
   out_3045663839531044115[81] = 0;
   out_3045663839531044115[82] = 0;
   out_3045663839531044115[83] = 0;
   out_3045663839531044115[84] = 0;
   out_3045663839531044115[85] = 0;
   out_3045663839531044115[86] = 0;
   out_3045663839531044115[87] = 0;
}
void h_13(double *state, double *unused, double *out_1970098613952177986) {
   out_1970098613952177986[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1970098613952177986[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1970098613952177986[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1393358276815853877) {
   out_1393358276815853877[0] = 0;
   out_1393358276815853877[1] = 0;
   out_1393358276815853877[2] = 0;
   out_1393358276815853877[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1393358276815853877[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1393358276815853877[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1393358276815853877[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1393358276815853877[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1393358276815853877[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1393358276815853877[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1393358276815853877[10] = 0;
   out_1393358276815853877[11] = 0;
   out_1393358276815853877[12] = 0;
   out_1393358276815853877[13] = 0;
   out_1393358276815853877[14] = 0;
   out_1393358276815853877[15] = 0;
   out_1393358276815853877[16] = 0;
   out_1393358276815853877[17] = 0;
   out_1393358276815853877[18] = 0;
   out_1393358276815853877[19] = 0;
   out_1393358276815853877[20] = 0;
   out_1393358276815853877[21] = 0;
   out_1393358276815853877[22] = 0;
   out_1393358276815853877[23] = 0;
   out_1393358276815853877[24] = 0;
   out_1393358276815853877[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1393358276815853877[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1393358276815853877[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1393358276815853877[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1393358276815853877[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1393358276815853877[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1393358276815853877[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1393358276815853877[32] = 0;
   out_1393358276815853877[33] = 0;
   out_1393358276815853877[34] = 0;
   out_1393358276815853877[35] = 0;
   out_1393358276815853877[36] = 0;
   out_1393358276815853877[37] = 0;
   out_1393358276815853877[38] = 0;
   out_1393358276815853877[39] = 0;
   out_1393358276815853877[40] = 0;
   out_1393358276815853877[41] = 0;
   out_1393358276815853877[42] = 0;
   out_1393358276815853877[43] = 0;
   out_1393358276815853877[44] = 0;
   out_1393358276815853877[45] = 0;
   out_1393358276815853877[46] = 0;
   out_1393358276815853877[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1393358276815853877[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1393358276815853877[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1393358276815853877[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1393358276815853877[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1393358276815853877[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1393358276815853877[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1393358276815853877[54] = 0;
   out_1393358276815853877[55] = 0;
   out_1393358276815853877[56] = 0;
   out_1393358276815853877[57] = 0;
   out_1393358276815853877[58] = 0;
   out_1393358276815853877[59] = 0;
   out_1393358276815853877[60] = 0;
   out_1393358276815853877[61] = 0;
   out_1393358276815853877[62] = 0;
   out_1393358276815853877[63] = 0;
   out_1393358276815853877[64] = 0;
   out_1393358276815853877[65] = 0;
}
void h_14(double *state, double *unused, double *out_5078662012341720751) {
   out_5078662012341720751[0] = state[10];
   out_5078662012341720751[1] = state[11];
   out_5078662012341720751[2] = state[12];
}
void H_14(double *state, double *unused, double *out_743728253420055510) {
   out_743728253420055510[0] = 0;
   out_743728253420055510[1] = 0;
   out_743728253420055510[2] = 0;
   out_743728253420055510[3] = 0;
   out_743728253420055510[4] = 0;
   out_743728253420055510[5] = 0;
   out_743728253420055510[6] = 0;
   out_743728253420055510[7] = 0;
   out_743728253420055510[8] = 0;
   out_743728253420055510[9] = 0;
   out_743728253420055510[10] = 1;
   out_743728253420055510[11] = 0;
   out_743728253420055510[12] = 0;
   out_743728253420055510[13] = 0;
   out_743728253420055510[14] = 0;
   out_743728253420055510[15] = 0;
   out_743728253420055510[16] = 0;
   out_743728253420055510[17] = 0;
   out_743728253420055510[18] = 0;
   out_743728253420055510[19] = 0;
   out_743728253420055510[20] = 0;
   out_743728253420055510[21] = 0;
   out_743728253420055510[22] = 0;
   out_743728253420055510[23] = 0;
   out_743728253420055510[24] = 0;
   out_743728253420055510[25] = 0;
   out_743728253420055510[26] = 0;
   out_743728253420055510[27] = 0;
   out_743728253420055510[28] = 0;
   out_743728253420055510[29] = 0;
   out_743728253420055510[30] = 0;
   out_743728253420055510[31] = 0;
   out_743728253420055510[32] = 0;
   out_743728253420055510[33] = 1;
   out_743728253420055510[34] = 0;
   out_743728253420055510[35] = 0;
   out_743728253420055510[36] = 0;
   out_743728253420055510[37] = 0;
   out_743728253420055510[38] = 0;
   out_743728253420055510[39] = 0;
   out_743728253420055510[40] = 0;
   out_743728253420055510[41] = 0;
   out_743728253420055510[42] = 0;
   out_743728253420055510[43] = 0;
   out_743728253420055510[44] = 0;
   out_743728253420055510[45] = 0;
   out_743728253420055510[46] = 0;
   out_743728253420055510[47] = 0;
   out_743728253420055510[48] = 0;
   out_743728253420055510[49] = 0;
   out_743728253420055510[50] = 0;
   out_743728253420055510[51] = 0;
   out_743728253420055510[52] = 0;
   out_743728253420055510[53] = 0;
   out_743728253420055510[54] = 0;
   out_743728253420055510[55] = 0;
   out_743728253420055510[56] = 1;
   out_743728253420055510[57] = 0;
   out_743728253420055510[58] = 0;
   out_743728253420055510[59] = 0;
   out_743728253420055510[60] = 0;
   out_743728253420055510[61] = 0;
   out_743728253420055510[62] = 0;
   out_743728253420055510[63] = 0;
   out_743728253420055510[64] = 0;
   out_743728253420055510[65] = 0;
}
void h_33(double *state, double *unused, double *out_1290343346391299525) {
   out_1290343346391299525[0] = state[16];
   out_1290343346391299525[1] = state[17];
   out_1290343346391299525[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4372085763151441148) {
   out_4372085763151441148[0] = 0;
   out_4372085763151441148[1] = 0;
   out_4372085763151441148[2] = 0;
   out_4372085763151441148[3] = 0;
   out_4372085763151441148[4] = 0;
   out_4372085763151441148[5] = 0;
   out_4372085763151441148[6] = 0;
   out_4372085763151441148[7] = 0;
   out_4372085763151441148[8] = 0;
   out_4372085763151441148[9] = 0;
   out_4372085763151441148[10] = 0;
   out_4372085763151441148[11] = 0;
   out_4372085763151441148[12] = 0;
   out_4372085763151441148[13] = 0;
   out_4372085763151441148[14] = 0;
   out_4372085763151441148[15] = 0;
   out_4372085763151441148[16] = 1;
   out_4372085763151441148[17] = 0;
   out_4372085763151441148[18] = 0;
   out_4372085763151441148[19] = 0;
   out_4372085763151441148[20] = 0;
   out_4372085763151441148[21] = 0;
   out_4372085763151441148[22] = 0;
   out_4372085763151441148[23] = 0;
   out_4372085763151441148[24] = 0;
   out_4372085763151441148[25] = 0;
   out_4372085763151441148[26] = 0;
   out_4372085763151441148[27] = 0;
   out_4372085763151441148[28] = 0;
   out_4372085763151441148[29] = 0;
   out_4372085763151441148[30] = 0;
   out_4372085763151441148[31] = 0;
   out_4372085763151441148[32] = 0;
   out_4372085763151441148[33] = 0;
   out_4372085763151441148[34] = 0;
   out_4372085763151441148[35] = 0;
   out_4372085763151441148[36] = 0;
   out_4372085763151441148[37] = 0;
   out_4372085763151441148[38] = 0;
   out_4372085763151441148[39] = 1;
   out_4372085763151441148[40] = 0;
   out_4372085763151441148[41] = 0;
   out_4372085763151441148[42] = 0;
   out_4372085763151441148[43] = 0;
   out_4372085763151441148[44] = 0;
   out_4372085763151441148[45] = 0;
   out_4372085763151441148[46] = 0;
   out_4372085763151441148[47] = 0;
   out_4372085763151441148[48] = 0;
   out_4372085763151441148[49] = 0;
   out_4372085763151441148[50] = 0;
   out_4372085763151441148[51] = 0;
   out_4372085763151441148[52] = 0;
   out_4372085763151441148[53] = 0;
   out_4372085763151441148[54] = 0;
   out_4372085763151441148[55] = 0;
   out_4372085763151441148[56] = 0;
   out_4372085763151441148[57] = 0;
   out_4372085763151441148[58] = 0;
   out_4372085763151441148[59] = 0;
   out_4372085763151441148[60] = 0;
   out_4372085763151441148[61] = 0;
   out_4372085763151441148[62] = 1;
   out_4372085763151441148[63] = 0;
   out_4372085763151441148[64] = 0;
   out_4372085763151441148[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3982672328206977086) {
  H(in_vec, out_3982672328206977086);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7065534367796289506) {
  err_fun(nom_x, delta_x, out_7065534367796289506);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_479709996386351187) {
  inv_err_fun(nom_x, true_x, out_479709996386351187);
}
void live_H_mod_fun(double *state, double *out_4572680402772579634) {
  H_mod_fun(state, out_4572680402772579634);
}
void live_f_fun(double *state, double dt, double *out_7823197626812359551) {
  f_fun(state,  dt, out_7823197626812359551);
}
void live_F_fun(double *state, double dt, double *out_350263754613447254) {
  F_fun(state,  dt, out_350263754613447254);
}
void live_h_4(double *state, double *unused, double *out_1228675592078714749) {
  h_4(state, unused, out_1228675592078714749);
}
void live_H_4(double *state, double *unused, double *out_6543490681844391960) {
  H_4(state, unused, out_6543490681844391960);
}
void live_h_9(double *state, double *unused, double *out_5078662012341720751) {
  h_9(state, unused, out_5078662012341720751);
}
void live_H_9(double *state, double *unused, double *out_743728253420055510) {
  H_9(state, unused, out_743728253420055510);
}
void live_h_10(double *state, double *unused, double *out_854738547976412628) {
  h_10(state, unused, out_854738547976412628);
}
void live_H_10(double *state, double *unused, double *out_2209412934872969411) {
  H_10(state, unused, out_2209412934872969411);
}
void live_h_12(double *state, double *unused, double *out_4011620689457812030) {
  h_12(state, unused, out_4011620689457812030);
}
void live_H_12(double *state, double *unused, double *out_5521995014822426660) {
  H_12(state, unused, out_5521995014822426660);
}
void live_h_31(double *state, double *unused, double *out_5651320870718150641) {
  h_31(state, unused, out_5651320870718150641);
}
void live_H_31(double *state, double *unused, double *out_1221528758512583544) {
  H_31(state, unused, out_1221528758512583544);
}
void live_h_32(double *state, double *unused, double *out_3573880032566032592) {
  h_32(state, unused, out_3573880032566032592);
}
void live_H_32(double *state, double *unused, double *out_3045663839531044115) {
  H_32(state, unused, out_3045663839531044115);
}
void live_h_13(double *state, double *unused, double *out_1970098613952177986) {
  h_13(state, unused, out_1970098613952177986);
}
void live_H_13(double *state, double *unused, double *out_1393358276815853877) {
  H_13(state, unused, out_1393358276815853877);
}
void live_h_14(double *state, double *unused, double *out_5078662012341720751) {
  h_14(state, unused, out_5078662012341720751);
}
void live_H_14(double *state, double *unused, double *out_743728253420055510) {
  H_14(state, unused, out_743728253420055510);
}
void live_h_33(double *state, double *unused, double *out_1290343346391299525) {
  h_33(state, unused, out_1290343346391299525);
}
void live_H_33(double *state, double *unused, double *out_4372085763151441148) {
  H_33(state, unused, out_4372085763151441148);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
